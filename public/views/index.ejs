<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="stylesheet" href="/styles/polygone.css" />
		<link rel="icon" type="image/png" href="/img/favicon.png" />
		<title><%= nomApp %></title>
		<meta name="Title" content="<%= nomApp %>"/>
		<meta name="Keywords" content="node.js, socket.io, chat"/>
		<meta name="Description" content="Une application de chat en temps réel visant à se rapprocher d'une conversation de vive voix"/>
	</head>
	<body>
		<div class="background">
		<canvas data-processing-sources="/views/Polygone_1.pde"></canvas>
		</div>
		<div class="foreground">
			<nav id="nav">
			<%- include("login.ejs", {etat: 0}) %>
			</nav>
			<section>
			<%- include("accueil.ejs", {ecoute: 0, nomApp, nomLieux,  premierLieuPublic})%>
			</section>
		</div>
		<script type="text/javascript" src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
		<script type="text/javascript" src="/include/jquery.caret.js"></script>
		<script type="text/javascript" src="/socket.io/socket.io.js"></script>
		<script type="text/javascript" src="/include/processing.min.js"></script>
		<script type="text/javascript" src="/include/ejs_fulljslint.js"></script>
		<script type="text/javascript" src="/include/ejs.js"></script>
		<script type="text/javascript" src="/include/jsbn.js"></script>
		<script type="text/javascript" src="/include/jsbn2.js"></script>
		<script type="text/javascript" src="/include/prng4.js"></script>
		<script type="text/javascript" src="/include/rng.js"></script>
		<script type="text/javascript" src="/include/rsa.js"></script>
		<script type="text/javascript" src="/include/rsa2.js"></script>
		<script type="text/javascript" src="/include/encryption.js"></script>
		<script type="text/javascript" src="/include/functions.js"></script>
		<script type="text/javascript" src="/include/message.js"></script>
		<script type="text/javascript" src="/include/user.js"></script>
		<script type="text/javascript" src="/include/lieu.js"></script>
		<script type="text/javascript" src="/include/app.js"></script>
		<script type="text/javascript">
			var url = '<%= ip %>:<%= port %>';
			var socket = io.connect(url);
			var dirViews = '/views/';
			<% if (prenom != "" && surnom != "") { %> App.storeId('<%= prenom %>', '<%= surnom %>'); <% } %>
			
			socket.on('init', function(data){
				App.reconnect();
				App.init(data.params);
				for (i=1; i < data.nbLieux; i++) {
					App.addLieu();
				}
				App.writeCoins();
				data.infosClients.forEach( function(client){
					App.addUserIn(client.surnom, client.presence, client.ecoute, client.couleur);
				});
				App.initAnonymes(data.nbAnonymes);
				fadeForegroundIn();
			});
			socket.on('connection', function(){
				App.addAnonyme();
			});
			socket.on('alreadyUsed', function(){
				updateView('alreadyUsed');
			});
			socket.on('wrongPrenom', function(){
				updateView('wrongPrenom');
			});
			socket.on('loggedIn', function(couleur){
				App.logInCUser(couleur);
				updateView('loggedIn');
			});
			socket.on('setMemory', function(memory){
				writeMemoire();
				memory.forEach(function(m){
					App.addMemory(m.pers_cite, m.citation);
				});
			});
			socket.on('newLogIn', function(data){
				App.addUser(data.surnom, data.couleur);
			});
			socket.on('logOut', function(data){
				App.delUser(data.surnom, data.lieu);
			});
			socket.on('loggedOut', function(){
				App.logOutCUser();
				updateView('loggedOut');
			});
			socket.on('ecriture', function(data){
				App.getUserIn(data.surnom, data.lieu).isWriting();
			});
			socket.on('arretEcriture', function(data){
				App.getUserIn(data.surnom, data.lieu).notWriting();
			});
			socket.on('message', function(data){
				App.addMessageTo(data.surnom, data.lieu, data.message, data.type);
			});
			socket.on('move', function(data){
				App.moveUser(data.surnom, data.presence, data.destination);
			});
			socket.on('listen', function(data){
				App.focusUser(data.surnom, data.presence, data.ecoute);
			});
			socket.on('goTo', function(destination){
				App.goTo(destination);
				updateView('listenTo');
			});
			socket.on('listenTo', function(ecoute){
				App.listenTo(ecoute);
				updateView('listenTo');
			});
			// someone else asks for your symetric key
			socket.on('askSymKey', function(data){
				var demandeur = App.getUser(data.surnom);
				var rsapub = new RSAKey();
				rsapub.setPublic(data.n, data.e);
			});
			// someone else sends you his/her symetric key
			socket.on('sendSymKey', function(data){
				App.cu.privKey.decrypt(data.cSymKey);
				App.getUser(data.surnom);
			});
			socket.on('addLieu', function(){
				App.addLieu();
			});
			socket.on('rmvLieu', function(){
				App.delLastLieu();
			});
			socket.on('disconnection', function(){
				App.rmvAnonyme();
			});
		</script>
	</body>
</html>